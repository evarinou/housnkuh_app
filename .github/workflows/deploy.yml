name: Deploy to VPS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        # Entferne die cache-Option, da keine Sperrdateien vorhanden sind
        # cache: 'npm'
        
    - name: Install and build client
      run: |
        cd client
        npm install
        npm run build
        
    - name: Install and build server
      run: |
        cd server
        npm install
        npm run build
        
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          # Versuche, die Umgebung für Node.js/npm/pm2 zu laden
          # Wähle die passende Methode für deinen Server:

          # Methode 2: Standard-Profildateien laden (kann auch helfen)
          if [ -f ~/.profile ]; then
            . ~/.profile
            echo "~/.profile geladen."
          fi
          if [ -f ~/.bashrc ]; then
            . ~/.bashrc
            echo "~/.bashrc geladen."
          fi

          # --- Dein restliches Deployment-Skript ---
          echo "Wechsle zu /var/www/housnkuh"
          cd /var/www/housnkuh
          
          echo "Repository wird aktualisiert..."
          git pull
          
          echo "Client-Abhängigkeiten werden installiert und Client wird gebaut..."
          cd client
          npm install --production --legacy-peer-deps
          npm run build
          
          echo "Server-Abhängigkeiten werden installiert und Server wird gebaut..."
          cd ../server
          npm install --production --legacy-peer-deps
          npm run build
          
          echo "PM2-Prozess wird neu gestartet/gestartet..."
          pm2 restart housnkuh-server || pm2 start npm --name "housnkuh-server" -- start --prefix server
          
          echo "Deployment abgeschlossen."